name: Build and Release Donut App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [published, created, edited]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Donut
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './Donut/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Download Gradle wrapper JAR
        run: |
          cd android/gradle/wrapper
          curl -L -o gradle-wrapper.jar https://github.com/gradle/gradle/raw/v8.3.0/gradle/wrapper/gradle-wrapper.jar

      - name: Build APK
        run: |
          # Generate the APK using Gradle directly
          cd android && ./gradlew assembleRelease
          
          # Copy the generated APK
          cp app/build/outputs/apk/release/app-release.apk ../donut-app.apk

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: donut-app.apk



  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android]
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android Artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-builds
          path: ./android-builds



      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Donut App v${{ github.run_number }}
          body: |
            ## üç© Donut App Release v${{ github.run_number }}
            
            ### üì± What's New
            - Modern rounded UI with gradients
            - Enhanced Bluetooth sync functionality
            - Improved post creation experience
            - Better visual design and animations
            
            ### üì¶ Downloads
            - **Android APK**: Direct installation APK
            
            ### üöÄ Features
            - Create text and photo posts
            - Offline Bluetooth sharing
            - Local SQLite storage
            - Spam prevention
            - Content moderation
            
            ### üîß Technical Details
            - Built with React Native
            - TypeScript support
            - Cross-platform compatibility
            - Modern UI components
            
            ### üìã Installation
            1. **Android**: Install the APK directly
            
            ### üêõ Bug Reports
            Please report any issues in the Issues section.
            
            ---
            *Built with ‚ù§Ô∏è using GitHub Actions*
          draft: false
          prerelease: false

      - name: Upload Android APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-builds/donut-app.apk
          asset_name: donut-app-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive



  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Donut
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './Donut/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run linting
        run: |
          npm install -g eslint
          npx eslint src/ --ext .ts,.tsx || true

  security:
    name: Security Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Donut
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './Donut/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: |
          npm audit --audit-level moderate || true
          echo "Security audit completed"