name: Build and Release Donut App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [published, created, edited]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Android AAB & APK
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Donut
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './Donut/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Login to Expo
        run: |
          mkdir -p ~/.expo
          echo '{"sessionSecret":"","accessToken":"${{ secrets.EXPO_TOKEN }}","authType":"access-token"}' > ~/.expo/state.json
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Configure EAS
        run: |
          export EXPO_NONINTERACTIVE=1
          eas build:configure
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android AAB
        run: |
          eas build --platform android --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android APK
        run: |
          eas build --platform android --profile preview --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Download AAB
        run: |
          # Download the built AAB
          AAB_URL=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          curl -L -o donut-app.aab "$AAB_URL"
          echo "AAB_URL=$AAB_URL" >> $GITHUB_ENV

      - name: Download APK
        run: |
          # Download the built APK
          APK_URL=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          curl -L -o donut-app.apk "$APK_URL"
          echo "APK_URL=$APK_URL" >> $GITHUB_ENV

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: |
            donut-app.aab
            donut-app.apk

  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./Donut
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './Donut/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Setup Expo CLI
        run: npm install -g @expo/cli

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Login to Expo
        run: |
          mkdir -p ~/.expo
          echo '{"sessionSecret":"","accessToken":"${{ secrets.EXPO_TOKEN }}","authType":"access-token"}' > ~/.expo/state.json
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Configure EAS
        run: |
          export EXPO_NONINTERACTIVE=1
          eas build:configure
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build iOS App
        run: |
          eas build --platform ios --profile production --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Download iOS App
        run: |
          # Download the built iOS app
          IOS_URL=$(eas build:list --platform ios --limit 1 --json | jq -r '.[0].artifacts.buildUrl')
          curl -L -o donut-ios.zip "$IOS_URL"
          echo "IOS_URL=$IOS_URL" >> $GITHUB_ENV

      - name: Upload iOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-builds
          path: donut-ios.zip

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android Artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-builds
          path: ./android-builds

      - name: Download iOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-builds
          path: ./ios-builds

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Donut App v${{ github.run_number }}
          body: |
            ## üç© Donut App Release v${{ github.run_number }}
            
            ### üì± What's New
            - Modern rounded UI with gradients
            - Enhanced Bluetooth sync functionality
            - Improved post creation experience
            - Better visual design and animations
            
            ### üì¶ Downloads
            - **Android AAB**: Production build for Google Play Store
            - **Android APK**: Direct installation APK
            - **iOS App**: Xcode project files
            
            ### üöÄ Features
            - Create text and photo posts
            - Offline Bluetooth sharing
            - Local SQLite storage
            - Spam prevention
            - Content moderation
            
            ### üîß Technical Details
            - Built with React Native + Expo
            - TypeScript support
            - Cross-platform compatibility
            - Modern UI components
            
            ### üìã Installation
            1. **Android**: Install the APK directly or use AAB for Play Store
            2. **iOS**: Use the Xcode project files to build and deploy
            
            ### üêõ Bug Reports
            Please report any issues in the Issues section.
            
            ---
            *Built with ‚ù§Ô∏è using GitHub Actions*
          draft: false
          prerelease: false

      - name: Upload Android AAB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-builds/donut-app.aab
          asset_name: donut-app-v${{ github.run_number }}.aab
          asset_content_type: application/octet-stream

      - name: Upload Android APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android-builds/donut-app.apk
          asset_name: donut-app-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload iOS App
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ios-builds/donut-ios.zip
          asset_name: donut-ios-v${{ github.run_number }}.zip
          asset_content_type: application/zip

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Donut
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './Donut/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npx tsc --noEmit

      - name: Run linting
        run: |
          npm install -g eslint
          npx eslint src/ --ext .ts,.tsx || true

  security:
    name: Security Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Donut
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './Donut/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: |
          npm audit --audit-level moderate || true
          echo "Security audit completed"